---
import Facebook from "../components/Facebook.astro";
import Instagram from "../components/Instagram.astro";
import Twitter from "../components/Twitter.astro";
// stylesheet dependencies are imported here, since `astro dev` injects them in the wrong order if they're imported in `<style />`, messing up specificity
import "../styles/reset.css";
import "@fontsource-variable/libre-franklin";

let error: string | undefined;
let payload: string | undefined;
if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const email = ((value) => {
    return typeof value === "string" ? value : "";
  })(formData.get("email"));

  if (!email) {
    error = "Whoops! It looks like you forgot to add your email";
  } else if (
    // from `zod`
    !/^([A-Z0-9_+-]+\.?)*[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i.test(
      email
    )
  ) {
    error = "Please provide a valid email address";
  }

  if (!error) {
    // todo: persist `email`
    return Astro.redirect("/");
  }
  payload = email;
}
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <!-- displays site properly based on user's device -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="icon"
      type="image/svg"
      sizes="32x32"
      href="/images/favicon-32x32.png"
    />
    <title>Frontend Mentor | Ping coming soon page</title>
  </head>
  <body>
    <header class="center">
      <img
        class="[ logo ] [ mx-auto ]"
        alt="ping"
        src="/images/logo.svg"
        width="86"
        height="26"
      />
    </header>
    <main class="mt-8 tablet:mt-10">
      <div class="center">
        <h1>We are launching <strong>soon!</strong></h1>
        <p class="mt-4">Subscribe and get notified</p>
        <form class="[ form ] [ mt-8 tablet:mt-10 ]" method="post" novalidate>
          <label class="sr-only" for="email"
            >Write your email to get notified</label
          >
          <input
            class="peer"
            id="email"
            type="email"
            name="email"
            autocomplete="email"
            placeholder="Your email address..."
            required
            value={payload}
            autofocus={!!error}
            aria-invalid={!!error}
            aria-describedby="email-error"
          />
          <p id="email-error" class="mt-1 tablet:mt-2">
            {error}
          </p>
          <button
            class="mt-3 peer-aria-invalid:mt-5 desktop:mt-0 desktop:peer-aria-invalid:mt-0"
            type="submit">Notify Me</button
          >
        </form>
      </div>
      <div class="overflow-x-hidden">
        <div class="[ center ] [ flex justify-center ]">
          <img
            class="[ dashboard ] [ mt-20 shrink-0 tablet:mt-24 ]"
            alt="the ping dashboard"
            src="/images/illustration-dashboard.png"
            width="1280"
            height="782"
          />
        </div>
      </div>
    </main>
    <footer class="[ center ] [ mt-20 ]">
      <ul class="flex flex-wrap justify-center gap-3" role="list">
        {
          [
            { name: "facebook", icon: <Facebook /> },
            { name: "twitter", icon: <Twitter /> },
            { name: "instagram", icon: <Instagram /> },
          ].map((site) => {
            return (
              <li>
                <a class="icon" href="#" data-site={site.name}>
                  {site.icon} <span class="sr-only">{site.name}</span>
                </a>
              </li>
            );
          })
        }
      </ul>
      <p class="mt-7 tablet:mt-6">
        <span aria-hidden="true">&copy;</span> Copyright Ping. All rights reserved.
      </p>
    </footer>
  </body>
</html>

<style is:global>
  :root {
    /* primary */
    --color-base-blue: 223 87% 63%;
    --color-blue: hsl(var(--color-base-blue));
    /* secondary */
    --color-pale-blue: hsl(223 100% 88%);
    --color-light-red: hsl(354 100% 66%);
    /* neutral */
    --color-gray: hsl(0 0% 59%);
    --color-very-dark-blue: hsl(209 33% 12%);
    /* other */
    --color-white: hsl(0 0% 100%);
    --color-input-placeholder: hsl(223 59% 83%);
    --color-button-focus: hsl(223 87% 70%);

    --font: "Libre Franklin Variable", sans-serif;

    --weight-light: 300;
    --weight-semi-bold: 600;
    --weight-bold: 700;

    --tracking-feedback: 0.008125rem;
    --tracking-feedback-desktop: 0.009375rem;

    --text-heading: var(--weight-light) 1.375rem / 2rem var(--font);
    --text-heading-desktop: var(--weight-light) 3rem / 3.75rem var(--font);
    --text-body: var(--weight-light) 0.75rem / 0.9375rem var(--font);
    --text-body-desktop: var(--weight-light) 1.25rem / 1.5rem var(--font);
    --text-input: var(--weight-light) 0.75rem / 1.25rem var(--font);
    --text-input-desktop: var(--weight-light) 1rem / 1.25rem var(--font);
    --text-feedback: italic var(--weight-light) 0.75rem / 1.25rem var(--font);
    --text-feedback-desktop: italic var(--weight-light) 1rem / 1.25rem
      var(--font);
    --text-button: var(--weight-semi-bold) 0.75rem / 1rem var(--font);
    --text-button-desktop: var(--weight-semi-bold) 1rem / 1.1875rem var(--font);
    --text-copyright: var(--weight-light) 0.625rem / 0.75rem var(--font);
    --text-copyright-desktop: var(--weight-light) 0.75rem / 0.9375rem
      var(--font);

    /* from tailwind */
    --transition: cubic-bezier(0.4, 0, 0.2, 1) 150ms;
  }

  body {
    font: var(--text-body);
    text-align: center;
    display: grid;
    grid-template-rows: auto 1fr auto;
    padding-block: 5rem 2.5rem;
    background: var(--color-white);
    color: var(--color-very-dark-blue);
  }

  footer {
    font: var(--text-copyright);
    color: var(--color-gray);
  }

  h1 {
    font: var(--text-heading);
    color: var(--color-gray);
  }

  ul {
    margin: 0;
    padding: 0;
  }

  strong {
    font-weight: var(--weight-bold);
    color: var(--color-very-dark-blue);
  }

  img {
    height: auto;
  }

  input {
    font: var(--text-input);
    min-width: 12.5rem;
    border: 1px solid var(--color-pale-blue);
    border-radius: 9999px;
    padding: 0.5625rem 1.9375rem;
    transition: border-color var(--transition);
  }

  input::placeholder {
    color: var(--color-input-placeholder);
  }

  input[aria-invalid="true"] {
    border-color: var(--color-light-red);
  }

  input + p[id] {
    font: var(--text-feedback);
    letter-spacing: var(--tracking-feedback);
    padding-inline: 2rem;
    color: var(--color-light-red);
  }

  button {
    font: var(--text-button);
    border: 1px solid transparent;
    border-radius: 9999px;
    padding: 0.6875rem 1.9375rem;
    background: var(--color-blue);
    color: var(--color-white);
    box-shadow: 0 0.3125rem 0.625rem 0.125rem hsl(var(--color-base-blue) / 23%);
    transition: background-color var(--transition);
  }

  button:hover,
  button:focus-visible {
    background: var(--color-button-focus);
  }

  .logo {
    width: auto;
    height: 1rem;
  }

  .form {
    display: grid;
  }

  .dashboard {
    max-width: none;
    width: 113%;
  }

  .icon {
    display: inline-grid;
    place-items: center;
    border: 1px solid
      var(--icon-color-border, hsl(var(--color-base-blue) / 15%));
    border-radius: 50%;
    width: 1.9375rem;
    height: 1.9375rem;
    background: var(--icon-color-background, var(--color-white));
    color: var(--icon-color-foreground, var(--color-blue));
    transition: var(--transition);
    transition-property: background-color, color;
  }

  .icon:hover,
  .icon:focus-visible {
    --icon-color-background: var(--color-blue);
    --icon-color-foreground: var(--color-white);
  }

  .icon[data-site="facebook"] svg {
    height: 0.9375rem;
  }

  .icon[data-site="twitter"] svg {
    height: 0.9rem;
  }

  .icon[data-site="instagram"] svg {
    height: 1.1rem;
  }

  .icon svg {
    fill: currentColor;
  }

  .center {
    box-sizing: content-box;
    max-inline-size: 40rem;
    margin-inline: auto;
    padding-inline: 3rem;
  }

  @screen tablet {
    body {
      font: var(--text-body-desktop);
      padding-bottom: 3rem;
    }

    footer {
      font: var(--text-copyright-desktop);
    }

    h1 {
      font: var(--text-heading-desktop);
    }

    input {
      font: var(--text-input-desktop);
      padding: 1.0625rem 1.8125rem;
    }

    input + p[id] {
      font: var(--text-feedback-desktop);
      letter-spacing: var(--tracking-feedback-desktop);
    }

    button {
      font: var(--text-button-desktop);
      padding: 1.0625rem 1.8125rem;
    }

    .logo {
      height: 1.6rem;
    }
  }

  @screen desktop {
    body {
      grid-template-rows: none;
      align-content: space-between;
    }

    input + p[id] {
      text-align: start;
      padding-inline: 1.875rem;
    }

    .form {
      grid-template-columns: 1fr minmax(12.5rem, auto);
      grid-template-areas:
        "input button"
        "feedback .";
      gap: 0 1rem;
    }

    .form > input {
      grid-area: input;
    }

    .form > p[id] {
      grid-area: feedback;
    }

    .form > button {
      grid-area: button;
    }

    .dashboard {
      max-width: 100%;
    }
  }

  @tailwind utilities;
</style>
