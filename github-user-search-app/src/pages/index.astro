---
import "../styles/global.css";
import App from "../components/App";
import { getUser, parse } from "../data/user";
import IconSun from "../components/IconSun";
import IconMoon from "../components/IconMoon";

let username = "octocat";
let error: string | undefined;
let payload: string | undefined;
let focusUserHeading = false;
if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const result = parse(formData);
  if (typeof result.error === "string") {
    error = result.error;
  } else {
    username = result.data.username;
    payload = result.data.username;
    focusUserHeading = true;
  }
}

const response = await getUser(username);
const user = response.data;
error = response.error?.message;
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/assets/favicon-32x32.png"
    />
    <title>Frontend Mentor | GitHub user search app</title>
    <script is:inline>
      const schemeKey = "scheme";
      const scheme = localStorage.getItem(schemeKey);
      if (scheme) {
        document.documentElement.dataset.scheme = scheme;
      }
    </script>
  </head>
  <body>
    <div class="center">
      <div class="cover region">
        <div>
          <header class="header">
            <p class="header__title">devfinder</p>
            <form hidden data-scheme-toggle>
              <button class="header__toggle" type="submit">
                <span class="toggle__light">
                  Dark<span class="sr-only"> mode</span>
                  <IconMoon />
                </span>
                <span class="toggle__dark">
                  Light<span class="sr-only"> mode</span>
                  <IconSun />
                </span>
              </button>
            </form>
          </header>
          <App
            client:load
            user={user}
            error={error}
            payload={payload}
            focusUserHeading={focusUserHeading}
          />
        </div>
      </div>
    </div>
    <p class="sr-only" role="status" aria-live="polite" data-announcer></p>
  </body>
</html>

<script>
  const schemeKey = "scheme";
  const schemeMq = matchMedia("(prefers-color-scheme: dark)");
  const $announcer = document.querySelector("[data-announcer]") as HTMLElement;
  const $toggle = document.querySelector(
    "[data-scheme-toggle]"
  ) as HTMLFormElement;

  $toggle.addEventListener("submit", function (e) {
    e.preventDefault();

    const scheme =
      localStorage.getItem(schemeKey) ?? (schemeMq.matches ? "dark" : "light");
    const nextScheme = scheme === "light" ? "dark" : "light";
    localStorage.setItem(schemeKey, nextScheme);
    document.documentElement.dataset.scheme = nextScheme;
    $announcer.textContent = `${nextScheme} mode is now enabled.`;
  });

  $toggle.hidden = false;
</script>
