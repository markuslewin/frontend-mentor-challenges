---
import "../styles/global.css";
import ShareIcon from "../components/icon-share.html";
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <!-- displays site properly based on user's device -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="./images/favicon-32x32.png"
    />
    <title>Frontend Mentor | Article preview component</title>
  </head>
  <body>
    <main>
      <article class="card">
        <img alt="" src="/images/drawers.jpg" />
        <div>
          <div class="p-8 pt-9 pb-0">
            <h1>
              Shift the overall look and feel by adding these wonderful touches
              to furniture in your home
            </h1>
            <p class="mt-3">
              Ever been in a room and felt like something was missing? Perhaps
              it felt slightly bare and uninviting. Iâ€™ve got some simple tips to
              help you make any room feel complete.
            </p>
          </div>
          <footer class="mt-5" data-share-widget>
            <div class="flex justify-between items-center gap-4 px-8 pt-3 pb-5">
              <div class="flex gap-4">
                <img
                  class="rounded-full w-10 h-10"
                  alt="michelle"
                  src="/images/avatar-michelle.jpg"
                />
                <div>
                  <p><strong>Michelle Appleton</strong></p>
                  <p>28 Jun 2020</p>
                </div>
              </div>
              <div data-share-button-container></div>
            </div>
            <div
              class="flex items-center gap-5 py-4 pr-20 pl-8"
              data-share-popover
            >
              <p id="share-desc">Share</p>
              <ul
                class="flex items-center gap-4"
                role="list"
                aria-describedby="share-desc"
              >
                {
                  [
                    {
                      name: "facebook",
                      image: "/images/icon-facebook.svg",
                      width: 20,
                      height: 20,
                    },
                    {
                      name: "twitter",
                      image: "/images/icon-twitter.svg",
                      width: 20,
                      height: 17,
                    },
                    {
                      name: "pinterest",
                      image: "/images/icon-pinterest.svg",
                      width: 20,
                      height: 20,
                    },
                  ].map((site) => {
                    return (
                      <li>
                        <a href="#">
                          <img
                            class="w-5 h-auto"
                            alt={site.name}
                            src={site.image}
                            width={site.width}
                            height={site.height}
                          />
                        </a>
                      </li>
                    );
                  })
                }
              </ul>
              <div data-share-popover-arrow></div>
            </div>
          </footer>
        </div>
      </article>
    </main>
  </body>
  <template id="share-button">
    <button
      class="inline-grid place-content-center w-8 h-8 border-none rounded-full relative z-10"
      data-share-button><ShareIcon /><span class="sr-only">share</span></button
    >
  </template>
</html>

<script>
  import { computePosition, shift, arrow, offset } from "@floating-ui/dom";
  import { screens } from "../utils/screens";
  import { useMediaQuery } from "../utils/media-queries";
  import { myAutoUpdate } from "../utils/floating";

  const template = document.getElementById(
    "share-button"
  ) as HTMLTemplateElement;
  const node = template.content.firstElementChild!.cloneNode(true);
  document.querySelector("[data-share-button-container]")!.append(node);

  const widget = document.querySelector("[data-share-widget]") as HTMLElement;
  const button = document.querySelector(
    "[data-share-button]"
  ) as HTMLButtonElement;
  const popover = document.querySelector("[data-share-popover]") as HTMLElement;
  const arrowEl = document.querySelector(
    "[data-share-popover-arrow]"
  ) as HTMLElement;

  const tabletMq = matchMedia(`(min-width: ${screens.tablet})`);

  const updatePosition = () => {
    computePosition(button, popover, {
      placement: "top",
      middleware: [shift(), offset(28), arrow({ element: arrowEl })],
    }).then(({ x, y, middlewareData }) => {
      Object.assign(popover.style, {
        left: `${x}px`,
        top: `${y}px`,
      });

      if (middlewareData.arrow) {
        const { x: arrowX, y: arrowY } = middlewareData.arrow;
        Object.assign(arrowEl.style, {
          left: arrowX != null ? `${arrowX}px` : "",
          top: arrowY != null ? `${arrowY}px` : "",
        });
      }
    });
  };

  let cleanup: (() => void) | undefined;
  const tabletChange = useMediaQuery(tabletMq, (matches) => {
    cleanup?.();
    if (matches) {
      cleanup = myAutoUpdate(button, popover, updatePosition);
    }
  });

  const setExpanded = (value: boolean) => {
    widget.dataset.expanded = value.toString();
    button.setAttribute("aria-expanded", value.toString());

    if (value) {
      tabletChange.setup();
    } else {
      tabletChange.cleanup();
      cleanup?.();
    }
  };

  button.addEventListener("click", () => {
    const expanded = button.getAttribute("aria-expanded") === "true";
    setExpanded(!expanded);
  });

  // widget.addEventListener("focusout", (e) => {
  //   if (!(e.relatedTarget instanceof Node)) {
  //     setExpanded(false);
  //     return;
  //   }
  //   if (!widget.contains(e.relatedTarget)) {
  //     setExpanded(false);
  //     return;
  //   }
  // });

  setExpanded(false);
</script>
